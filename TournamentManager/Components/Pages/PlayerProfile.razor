@page "/players/{nickname}"

@using TournamentManager.Models
@using TournamentManager.Services
@using TournamentManager.Utility
@rendermode InteractiveServer

@inject PlayerService PlayerService

<div class="player-information">
    <div class="player-image-wrapper">
        <img class="player-image" src="@player.ImagePath" alt="Photo of @player.Nickname"/>
    </div><z></z>
    <div class="player-information-wrapper">
        <p class="player-nickname">@player.Nickname</p>
        <p class="player-name">@player.Name</p>
        <p class="player-nationality-age">@player.Nationality, @(_helpers.CalculateAge(player.Birthday))</p>
        
        <div class="player-team-wrapper">
            <img class="player-team-image" src="@player.Team.ImagePath"/>
            <p class="player-team-name">@player.Team.Name</p>
        </div>
        
        <div class="player-status-wrapper">
            <p class="player-status">@player.Status</p>
        </div>
    </div>

    <div class="player-rating">
        <p>#14</p>
    </div>
    
</div>

<FluentTabs ActiveTabId="tab-1" Width="100%">
    <FluentTab>
        <Header>Team</Header>
        <Content>
            <p>@player.Team.Name</p>
            <img src="@player.Team.ImagePath"/>
        </Content>
    </FluentTab>
    <FluentTab>
        <Header>Statistics</Header>
        <Content>
            1 kd
        </Content>
    </FluentTab>
    <FluentTab>
        <Header>Tournaments</Header>
        <Content>
            IEM Cologne
        </Content>
    </FluentTab>
    
</FluentTabs>


@code {
    
    [Parameter] public string Nickname { get; set; }

    private Player player;

    private Helpers _helpers = new Helpers();
    
    protected override async Task OnInitializedAsync()
    {
        player = await PlayerService.GetPlayerAndTeamByNicknameAsync(Nickname);
    }
}