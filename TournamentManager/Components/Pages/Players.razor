@page "/players"

@using TournamentManager.Models
@using TournamentManager.Services
@rendermode InteractiveServer

@inject NavigationManager Navigation
@inject PlayerService PlayerService
@inject IStringLocalizer<Resource> Localizer

<PageTitle>Players</PageTitle>

<div>
    <FluentDataGrid Items="@FilteredItems"
                    GridTemplateColumns="0.2fr 0.2fr 0.2fr 0.2fr 0.2fr 0.2fr"
                    Pagination="@pagination"
                    TGridItem="Player"
                    OnCellClick="HandleCellClick">

        <!-- Player Image -->
        <TemplateColumn Style="height: 50px; cursor: pointer" Title="@Localizer["Avatar"]" Tooltip="true" Align="Align.Center">
            <img class="player-avatar" src="@context.ImagePath" alt="Avatar of @(context.Nickname)" style="width: 40px; height: 40px; border-radius: 5px;" />
        </TemplateColumn>

        <!-- Nickname with OnClick -->
        <PropertyColumn Align="Align.Center" Style="height: 50px; cursor: pointer" Property="@(c => c.Nickname)" Sortable="true" Filtered="!string.IsNullOrWhiteSpace(nameFilter)" Tooltip="true" Title="@Localizer["Nickname"]">
            <ColumnOptions>
                <div class="search-box">
                    <FluentSearch Autofocus="true" @bind-Value="nameFilter" @oninput="HandlePlayerFilter" @bind-Value:after="HandleClear" Placeholder="@Localizer["Nickname_Search"]" Style="width: 100%;" Label="Filter" />
                </div>
            </ColumnOptions>
        </PropertyColumn>
        
        <!-- Rating -->
        <PropertyColumn Style="height: 50px; cursor: pointer" Property="@(c => c.Rating)" Sortable="true" Align="Align.Center" Tooltip="true" Title="@Localizer["Rating"]"/>
        
        <!-- Nationality -->
        <PropertyColumn class="hover-background" Style="height: 50px; cursor: pointer" Property="@(c => c.Nationality)" Sortable="true" Align="Align.Center" Tooltip="true" Title="@Localizer["Nationality"]"/>

        <!-- Birthday -->
        <PropertyColumn Style="height: 50px; cursor: pointer"  Property="@(c => GetFormattedDate(c.Birthday))"  Sortable="true" Align="Align.Center" Tooltip="true" Title="@Localizer["Birthday"]" />

        <!-- Status -->
        <PropertyColumn Style="height: 50px; cursor: pointer" Property="@(c => c.Status)" Sortable="true" Align="Align.Center" Tooltip="true" Title="@Localizer["Player_Status"]" />

    </FluentDataGrid>
</div>

<FluentPaginator State="@pagination" />

@code {
    bool _clearItems = false;
    IQueryable<Player>? items;
    PaginationState pagination = new PaginationState { ItemsPerPage = 20 };
    string nameFilter = string.Empty;

    IQueryable<Player>? FilteredItems
    {
        get
        {
            var result = items;

            if (!string.IsNullOrEmpty(nameFilter))
            {
                result = result?.Where(c => c.Nickname.Contains(nameFilter, StringComparison.CurrentCultureIgnoreCase));
            }

            return result;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        items = (await PlayerService.GetAllPlayersAsync()).AsQueryable();
    }

    private void HandlePlayerFilter(ChangeEventArgs args)
    {
        if (args.Value is string value)
        {
            nameFilter = value;
        }
    }

    private void HandleClear()
    {
        if (string.IsNullOrWhiteSpace(nameFilter))
        {
            nameFilter = string.Empty;
        }
    }

    private void HandleCellClick(FluentDataGridCell<Player> cell)
    {
        if (cell.Item is Player player)
        {
            Navigation.NavigateTo($"/players/{player.Nickname}", forceLoad: true);
        }
    }
    
    private string GetFormattedDate(DateTime? date)
    {
        return date?.ToString("d", CultureInfo.CurrentCulture) ?? "N/A"; 
    }
}
